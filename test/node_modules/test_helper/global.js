//==============================================================================
//-- global properties

Object.defineProperty(global, "TEST_ROOT_PATH", {
  get: function() {
    //return (__dirname.match(/(.*test)(\/|$)(?!test)*/) || [])[1];
    return (process.cwd() + "/test");
  }
});

//------------------------------------------------------------------------------

Object.defineProperty(global, "TEST_FIXTURES_PATH", {
  get: function() {
    return TEST_ROOT_PATH + "/fixtures";
  }
});

//------------------------------------------------------------------------------

Object.defineProperty(global, "TEST_SHARED_BEHAVIORS_PATH", {
  get: function() {
    return TEST_ROOT_PATH + "/shared_behaviors";
  }
});

//------------------------------------------------------------------------------

Object.defineProperty(global, "TEST_NAME", {
  get: function() {
    var name = "Anonymous";
    var caller = arguments.callee.caller.toString();
    var args = arguments.callee.caller.arguments;
    var match = caller.match(/exports, *require, *module, *__filename, *__dirname/);

    if (match) {
      var filename = args[3] || name;
      name = filename.replace(TEST_ROOT_PATH+"/", "").replace(".js", "");
    }
    return name;
  }
});

//------------------------------------------------------------------------------

var xhr = null;
Object.defineProperty(global, "xhr", {
  get: function() {
    if (!xhr) {
      xhr = require("supertest")(sails.hooks.http.app);
    }
    return xhr;
  }
});

//------------------------------------------------------------------------------

var request = null;
Object.defineProperty(global, "request", {
  get: function() {
    if (!request) {
      request = new (require("supertest-session")({app: sails.hooks.http.app}))();
    }
    return request;
  }
});

//==============================================================================
//-- declare globals here

global.sinon = require("sinon");
global.stub = sinon.stub;
global.mock = sinon.mock;

global.chai = require("chai");
global.expect = chai.expect;
chai.should();
chai.use(require("sinon-chai"));
chai.use(require("./chai-custom"));

//-- load all factories
global.Factory = require("sails-factory").load();

